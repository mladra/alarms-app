version: "2"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.4
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      KAFKA_CFG_LISTENERS: "INTERNAL://:9092"
      KAFKA_CFG_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CFG_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_CFG_RESTART_ATTEMPTS: "10"
      KAFKA_CFG_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
      KAFKA_BROKER_ID: '1'
      KAFKA_CFG_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"

  kafka-producer-service:
    build:
      dockerfile: kafka-producer-service/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - kafka

  kafka-listener-service:
    build:
      dockerfile: kafka-listener-service/Dockerfile
    ports:
      - "8080:8081"
    depends_on:
      - kafka
      - kafka-producer-service

  rest-service:
    build:
      dockerfile: rest-service/Dockerfile
    ports:
      - "8080:8082"

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local